# -*- coding: utf-8 -*-
"""Text_Message.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1GAn9urA9pLEZm_BFEFQC-WYH66nkjzl7
"""

pip install twilio

from twilio.rest import Client

# Twilio credentials
SID = "AC7e0848165b77dd48588e6cec617119bf"  # Our Twilio Account SID
token = "e8e80bf90763fcb56d0011d060cebcf6"  # Our Twilio Auth Token
twilio_number = "+15075843542"  # Our Twilio phone number
recipient_number = '+15075643696'  # Replace with the recipient's phone number gathered from the twilio log

client = Client(SID, token)

def disaster_response():
    """Automate disaster response and send message."""
    age = int(input("What is your age? "))
    name = input("What is your name? ")
    lat_location = float(input("What is your latitude? "))
    long_location = float(input("What is your longitude? "))
    print("Describe your injury severity on a scale from 1 (minor) to 5 (severe).")
    injury = int(input("Enter the number corresponding to your injury level (1-5): "))

    global help_message
    help_message = (f"Age: {age}\n"
                    f"Name: {name}\n"
                    f"Location: Latitude {lat_location}, Longitude {long_location}\n"
                    f"Injury severity: {injury}\n"
                    f"Help is on the way!")
    send_message()

def send_message():
    """Send the help message using Twilio."""
    try:
        message = client.messages.create(
            body=help_message,  # Questions in help_message are sent to the recipient's number
            from_=twilio_number,
            to=recipient_number
        )
        print(f"Response sent with SID: {message.sid}") # Shows our Twilio SID and indicates that message was sent successfully
    except Exception as e:
        print(f"Error sending message: {e}")


# If we were using the paid version of the twilio API, the user would be getting the messages in help_message on their phone's messaging app

user_input = input("Type 'help' to simulate response, or anything else to exit: ").strip().lower()

if user_input == 'help':
    disaster_response()
else:
    print("No action.")

# The error below occurs because we are on an unpaid plan and cannot send messages to real numbers.
# Error sending message: HTTP 400 error: Unable to create record: The number +1507564XXXX is unverified. Trial accounts cannot send messages to unverified numbers
